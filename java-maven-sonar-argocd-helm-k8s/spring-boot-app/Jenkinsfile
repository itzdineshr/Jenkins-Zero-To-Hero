pipeline{
    
    agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
    stages{
        stage('Checkout from SCM')
        {
            steps
            {
                git url:'https://github.com/itzdineshr/Jenkins-Zero-To-Hero.git' , branch:'main'
                sh 'echo Checkout completed'
            }

        }

        stage('Build and Test')
        {
            steps{
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }

        }

        stage('Static Code Analysis')
        {
            environment{
                SONAR_URL = "http://192.168.1.9:9000"
            }
            steps{
                withCredentials([string(credentialsId:'sonarqube',variable:'SONAR_AUTH_TOKEN')])
                {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }

        }

        stage('Build and Push Docker Image')
        {
            environment{
                DOCKER_IMAGE = "dineshr180298/springboot-app-demo:${BUILD_NUMBER}"
            }
            steps{
                script{
                  sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                  def dockerImage = docker.image("${DOCKER_IMAGE}")
                  docker.withRegistry('https://index.docker.io/v1/',"docker-cred"){
                  dockerImage.push()
                  }
                }
            }

        }

        stage('Update Deployment File')
        {
            environment{
                GIT_REPO_NAME = "https://github.com/itzdineshr/Jenkins-Zero-To-Hero.git"
                GIT_USER_NAME = "itzdineshr"
            }
            steps{
                withCredentials([string(credentialsId:'github_jenkins',variable:'GITHUB_TOKEN')])
                {
                    sh '''
                    BUILD_NUMBER = ${BUILD_NUMBER}
                    git config user.name = "Dinesh R"
                    git config user.email = "itzdineshr@gmail.com"
                    sed -i 's|tag: .*|tag: "${BUILD_NUMBER}"|g' java-maven-sonar-argocd-helm-k8s/helm/spring-boot-app/values.yaml
                    git add java-maven-sonar-argocd-helm-k8s/helm/spring-boot-app/values.yaml
                    git commit -m 'Updated Helm Value file with Image Tag ${BUILD_NUMBER}'
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }

        }
    }
    post {
        always {
            cleanWs()  // Clean workspace after build
        }
    }
}